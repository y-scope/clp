name: "clp-core-build"
description: "Builds CLP-core in the specified container"

inputs:
  image_name:
    description: "Name of the container image (without registry or repository) to use"
    required: true
  use_published_image:
    description: "Whether to use the published container image"
    required: true
  use_shared_libs:
    description: "Whether to build the core binaries by linking against shared libraries"
    required: true
  upload_binaries:
    description: "Whether to upload the core binaries"
    required: true
  binaries_artifact_name:
    description: "Name of the artifact containing the core binaries"
    required: false

runs:
  using: "composite"
  steps:
    - if: "inputs.use_published_image == 'false'"
      uses: "actions/download-artifact@v4"
      with:
        name: "${{inputs.image_name}}"
        path: "/tmp"

    - if: "inputs.use_published_image == 'false'"
      name: "Load image"
      run: "docker load --input '/tmp/${{inputs.image_name}}.tar'"
      shell: "bash"

    - id: "get_image_props"
      run: |
        if [[ "${{inputs.use_published_image}}" == "true" ]] ; then
          # Docker doesn't support repository names with uppercase characters, so we convert to
          # lowercase here.
          repository=$(echo '${{github.repository}}' | tr '[:upper:]' '[:lower:]')
          echo "qualified_image_name=ghcr.io/${repository}/${{inputs.image_name}}:main" \
            >> "$GITHUB_OUTPUT"
        else
          echo "qualified_image_name=${{inputs.image_name}}:latest" >> "$GITHUB_OUTPUT"
        fi
      shell: "bash"

    - run: "./tools/scripts/deps-download/init.sh"
      shell: "bash"

    - run: >-
        docker run
        --user $(id -u):$(id -g)
        --volume "$GITHUB_WORKSPACE":/mnt/clp
        --workdir /mnt/clp
        ${{steps.get_image_props.outputs.qualified_image_name}}
        bash -c "task deps:core &&
        python3 /mnt/clp/components/core/tools/scripts/utils/build-and-run-unit-tests.py
        ${{inputs.use_shared_libs == 'true' && '--use-shared-libs' || ''}}
        --source-dir /mnt/clp/components/core
        --build-dir /mnt/clp/components/core/build
        --num-jobs $(getconf _NPROCESSORS_ONLN)"
      shell: "bash"

    - if: "inputs.upload_binaries == 'true'"
      id: "copy_binaries"
      run: |-
        output_dir="/tmp/${{inputs.binaries_artifact_name}}"
        echo "output_dir=${output_dir}" >> "$GITHUB_OUTPUT"

        mkdir -p "${output_dir}"
        cd "$GITHUB_WORKSPACE/components/core/build"
        tar cfvv "${output_dir}/clp.tar" clg clp clp-s glt make-dictionaries-readable
      shell: "bash"

    - if: "inputs.upload_binaries == 'true'"
      uses: "actions/upload-artifact@v4"
      with:
        name: "${{inputs.binaries_artifact_name}}"
        path: "${{steps.copy_binaries.outputs.output_dir}}"
        retention-days: 1
