name: "clp-deps-images"

on:
  pull_request:
    paths:
      - ".github/actions/clp-core-build/action.yaml"
      - ".github/actions/clp-core-build-containers/action.yaml"
      - ".github/workflows/clp-deps-images.yaml"
      - ".gitmodules"
      - "components/core/**"
      - "deps-tasks.yml"
      - "Taskfile.yml"
      - "tools/scripts/deps-download/**"
      - "!components/core/tools/scripts/lib_install/macos/**"
  push:
    paths:
      - ".github/actions/clp-core-build/action.yaml"
      - ".github/actions/clp-core-build-containers/action.yaml"
      - ".github/workflows/clp-deps-images.yaml"
      - ".gitmodules"
      - "components/core/**"
      - "deps-tasks.yml"
      - "Taskfile.yml"
      - "tools/scripts/deps-download/**"
      - "!components/core/tools/scripts/lib_install/macos/**"
  schedule:
    # Run daily at 00:15 UTC (the 15 is to avoid periods of high load)
    - cron: "15 0 * * *"
  workflow_call:
  workflow_dispatch:

env:
  BINARIES_ARTIFACT_NAME_PREFIX: "clp-core-binaries-"
  DEPS_IMAGE_NAME_PREFIX: "clp-core-dependencies-x86-"

# Currency group to prevent multiple workflow instances from trying to publish container images
concurrency: "${{github.workflow}}-${{github.ref}}"

jobs:
  filter-relevant-changes:
    runs-on: "ubuntu-latest"
    outputs:
      centos_stream_9_image_changed: "${{steps.filter.outputs.centos_stream_9_image}}"
      ubuntu_focal_image_changed: "${{steps.filter.outputs.ubuntu_focal_image}}"
      ubuntu_jammy_image_changed: "${{steps.filter.outputs.ubuntu_jammy_image}}"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - name: "Filter relevant changes"
        uses: "dorny/paths-filter@v3"
        id: "filter"
        with:
          # Consider changes between the current commit and `main`
          # NOTE: If a pull request changes one of the images, then we need to (1) build the image
          # (based on commits in the PR) and then (2) build CLP using the changed image. If a pull
          # request doesn't change an image, then we don't need to rebuild the image; instead we can
          # use the published image which is based on `main`. So when determining what files have
          # changed, we need to consider the delta between the current commit and `main` (rather
          # than the current and previous commits) in order to detect if we need to rebuild the
          # image (since it would be different from the published image).
          base: "main"
          filters: |
            centos_stream_9_image:
              - ".github/actions/**"
              - ".github/workflows/clp-deps-images.yaml"
              - "components/core/tools/scripts/lib_install/*.sh"
              - "components/core/tools/docker-images/clp-env-base-centos-stream-9/**"
              - "components/core/tools/scripts/lib_install/centos-stream-9/**"
            ubuntu_focal_image:
              - ".github/actions/**"
              - ".github/workflows/clp-deps-images.yaml"
              - "components/core/tools/scripts/lib_install/*.sh"
              - "components/core/tools/docker-images/clp-env-base-ubuntu-focal/**"
              - "components/core/tools/scripts/lib_install/ubuntu-focal/**"
            ubuntu_jammy_image:
              - ".github/actions/**"
              - ".github/workflows/clp-deps-images.yaml"
              - "components/core/tools/scripts/lib_install/*.sh"
              - "components/core/tools/docker-images/clp-env-base-ubuntu-jammy/**"
              - "components/core/tools/scripts/lib_install/ubuntu-jammy/**"

  centos-stream-9-deps-image:
    if: "needs.filter-relevant-changes.outputs.centos_stream_9_image_changed == 'true'"
    needs: "filter-relevant-changes"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - uses: "./.github/actions/clp-core-build-containers"
        env:
          OS_NAME: "centos-stream-9"
        with:
          image_name: "${{env.DEPS_IMAGE_NAME_PREFIX}}${{env.OS_NAME}}"
          docker_context: "components/core"
          docker_file: "components/core/tools/docker-images/clp-env-base-${{env.OS_NAME}}\
            /Dockerfile"
          push_deps_image: >-
            ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
          token: "${{secrets.GITHUB_TOKEN}}"

  ubuntu-focal-deps-image:
    if: "needs.filter-relevant-changes.outputs.ubuntu_focal_image_changed == 'true'"
    needs: "filter-relevant-changes"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - uses: "./.github/actions/clp-core-build-containers"
        env:
          OS_NAME: "ubuntu-focal"
        with:
          image_name: "${{env.DEPS_IMAGE_NAME_PREFIX}}${{env.OS_NAME}}"
          docker_context: "components/core"
          docker_file: "components/core/tools/docker-images/clp-env-base-${{env.OS_NAME}}\
            /Dockerfile"
          push_deps_image: >-
            ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
          token: "${{secrets.GITHUB_TOKEN}}"

  ubuntu-jammy-deps-image:
    if: "needs.filter-relevant-changes.outputs.ubuntu_jammy_image_changed == 'true'"
    needs: "filter-relevant-changes"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Work around actions/runner-images/issues/6775"
        run: "chown $(id -u):$(id -g) -R ."
        shell: "bash"

      - uses: "./.github/actions/clp-core-build-containers"
        env:
          OS_NAME: "ubuntu-jammy"
        with:
          image_name: "${{env.DEPS_IMAGE_NAME_PREFIX}}${{env.OS_NAME}}"
          docker_context: "components/core"
          docker_file: "components/core/tools/docker-images/clp-env-base-${{env.OS_NAME}}\
            /Dockerfile"
          push_deps_image: >-
            ${{github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
          token: "${{secrets.GITHUB_TOKEN}}"
