version: "3"

vars:
  G_LINT_VENV_DIR: "{{.G_BUILD_DIR}}/lint-venv"
  G_WEBUI_SRC_DIR: "{{.ROOT_DIR}}/components/webui"

tasks:
  check:
    cmds:
      - task: "cpp-check"
      - task: "js-check"
      - task: "py-check"
      - task: "yml-check"

  fix:
    cmds:
      - task: "cpp-fix"
      - task: "js-fix"
      - task: "py-fix"
      - task: "yml-fix"

  cpp-check:
    cmds:
      - task: "cpp-format-check"

  cpp-fix:
    cmds:
      - task: "cpp-format-fix"

  js-check:
    sources: &js_source_files
      - "{{.G_BUILD_DIR}}/lint#linter-node-modules.md5"
      - "{{.G_BUILD_DIR}}/log-viewer-webui-node-modules.md5"
      - "{{.G_BUILD_DIR}}/webui-node-modules.md5"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/client/package.json"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/client/src/**/*.css"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/client/src/**/*.jsx"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/client/src/webpack.config.js"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/server/package.json"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/server/settings.json"
      - "{{.G_LOG_VIEWER_WEBUI_SRC_DIR}}/server/src/**/*.js"
      - "{{.G_WEBUI_SRC_DIR}}/client/**/*.js"
      - "{{.G_WEBUI_SRC_DIR}}/client/**/*.jsx"
      - "{{.G_WEBUI_SRC_DIR}}/imports/**/*.js"
      - "{{.G_WEBUI_SRC_DIR}}/imports/**/*.jsx"
      - "{{.G_WEBUI_SRC_DIR}}/launcher.js"
      - "{{.G_WEBUI_SRC_DIR}}/package.json"
      - "{{.G_WEBUI_SRC_DIR}}/server/**/*.js"
      - "{{.G_WEBUI_SRC_DIR}}/server/**/*.jsx"
      - "{{.G_WEBUI_SRC_DIR}}/tests/**/*.js"
      - "{{.G_WEBUI_SRC_DIR}}/tests/**/*.jsx"
      - "{{.ROOT_DIR}}/Taskfile.yml"
      - "{{.TASKFILE}}"
    cmds:
      - task: "js"
        vars:
          LINT_CMD: "check"

  js-fix:
    sources: *js_source_files
    cmds:
      - task: "js"
        vars:
          LINT_CMD: "fix"

  py-check:
    cmds:
      - task: "py"
        vars:
          BLACK_FLAGS: "--check --diff"
          RUFF_FLAGS: ""

  py-fix:
    cmds:
      - task: "py"
        vars:
          BLACK_FLAGS: ""
          RUFF_FLAGS: "--fix"

  yml:
    aliases:
      - "yml-check"
      - "yml-fix"
    deps: ["venv"]
    cmds:
      - |-
        . "{{.G_LINT_VENV_DIR}}/bin/activate"
        yamllint --strict \
          .github \
          .yamllint.yml \
          components/core/.clang-format \
          components/core/config \
          components/package-template/src/etc \
          docs \
          deps-tasks.yml \
          lint-tasks.yml \
          Taskfile.yml

  cpp-format-check:
    sources: &cpp_source_files
      - "{{.ROOT_DIR}}/.clang-format"
      - "{{.ROOT_DIR}}/.clang-tidy"
      - "{{.TASKFILE}}"
      - "{{.G_CORE_COMPONENT_DIR}}/.clang-format"
      - "{{.G_CORE_COMPONENT_DIR}}/src/**"
      - "{{.G_CORE_COMPONENT_DIR}}/tests/**"
    deps: ["cpp-lint-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["--dry-run"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp", "*.inc"]
          ROOT_PATHS: *cpp_source_files
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  cpp-format-fix:
    sources: *cpp_source_files
    deps: ["cpp-lint-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["-i"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp", "*.inc"]
          ROOT_PATHS: *cpp_source_files
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  cpp-lint-configs:
    internal: true
    cmd: "{{.ROOT_DIR}}/tools/yscope-dev-utils/lint-configs/symlink-cpp-lint-configs.sh"

  js:
    internal: true
    requires:
      vars: ["LINT_CMD"]
    deps: [":log-viewer-webui-node-modules", "linter-node-modules"]
    cmds:
      - for:
          - "components/log-viewer-webui"
          - "components/webui"
        cmd: |-
          cd "{{.ITEM}}"
          PATH="{{.G_NODEJS_22_BIN_DIR}}":$PATH npm run "lint:{{.LINT_CMD}}"

  py:
    internal: true
    requires:
      vars: ["BLACK_FLAGS", "RUFF_FLAGS"]
    deps: ["venv"]
    cmds:
      - for:
          - "components/clp-package-utils/clp_package_utils"
          - "components/clp-py-utils/clp_py_utils"
          - "components/core/tools/scripts/utils"
          - "components/job-orchestration/job_orchestration"
          - "tools/scripts"
          - "docs/conf"
        cmd: |-
          . "{{.G_LINT_VENV_DIR}}/bin/activate"
          cd "{{.ITEM}}"
          black --color --line-length 100 {{.BLACK_FLAGS}} .
          ruff check {{.RUFF_FLAGS}} .

  linter-node-modules:
    internal: true
    vars:
      WEBUI_LINTER_DIR: "{{.ROOT_DIR}}/components/webui/linter"
      OUTPUT_DIR: "{{.WEBUI_LINTER_DIR}}/node_modules"
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK | replace \":\" \"#\"}}.md5"
    sources:
      - "{{.G_BUILD_DIR}}/nodejs-22.md5"
      - "{{.G_BUILD_DIR}}/webui-node-modules.md5"
      - "{{.ROOT_DIR}}/Taskfile.yml"
      - "{{.TASKFILE}}"
      - "package.json"
      - "package-lock.json"
    dir: "{{.WEBUI_LINTER_DIR}}"
    generates: ["{{.CHECKSUM_FILE}}"]
    deps:
      - ":init"
      - ":webui-node-modules"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
      - ":nodejs-22"
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - "PATH='{{.G_NODEJS_22_BIN_DIR}}':$PATH npm clean-install"
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  venv:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK | replace \":\" \"#\"}}.md5"
      OUTPUT_DIR: "{{.G_LINT_VENV_DIR}}"
    sources:
      - "{{.ROOT_DIR}}/Taskfile.yml"
      - "{{.TASKFILE}}"
      - "lint-requirements.txt"
    generates: ["{{.CHECKSUM_FILE}}"]
    deps:
      - ":init"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: ":utils:misc:create-venv"
        vars:
          LABEL: "lint"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          REQUIREMENTS_FILE: "{{.ROOT_DIR}}/lint-requirements.txt"
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
